/* Generated By:JavaCC: Do not edit this line. MyLangConstants.java */
package jj;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MyLangConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 7;
  /** RegularExpression Id. */
  int VAR = 8;
  /** RegularExpression Id. */
  int IS = 9;
  /** RegularExpression Id. */
  int BEGIN = 10;
  /** RegularExpression Id. */
  int END = 11;
  /** RegularExpression Id. */
  int FUNCTION = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int TYPE = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int INTEGER = 16;
  /** RegularExpression Id. */
  int ARRAY = 17;
  /** RegularExpression Id. */
  int OF = 18;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 19;
  /** RegularExpression Id. */
  int REAL_LITERAL = 20;
  /** RegularExpression Id. */
  int DIGIT = 21;
  /** RegularExpression Id. */
  int UNDERSCORE = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int SEMICOLON = 24;
  /** RegularExpression Id. */
  int COLON = 25;
  /** RegularExpression Id. */
  int LEFTPARENTHESES = 26;
  /** RegularExpression Id. */
  int RIGHTPARENTHESES = 27;
  /** RegularExpression Id. */
  int EQUAL = 28;
  /** RegularExpression Id. */
  int PLUS = 29;
  /** RegularExpression Id. */
  int MINUS = 30;
  /** RegularExpression Id. */
  int TIMES = 31;
  /** RegularExpression Id. */
  int DIVIDE = 32;
  /** RegularExpression Id. */
  int IDENTIFIER = 33;
  /** RegularExpression Id. */
  int LETTER = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"program\"",
    "\"var\"",
    "\"is\"",
    "\"begin\"",
    "\"end\"",
    "\"function\"",
    "\"return\"",
    "\"type\"",
    "\"boolean\"",
    "\"integer\"",
    "\"array\"",
    "\"of\"",
    "<INTEGER_LITERAL>",
    "<REAL_LITERAL>",
    "<DIGIT>",
    "\"_\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<IDENTIFIER>",
    "<LETTER>",
  };

}
